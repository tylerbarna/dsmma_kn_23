###################################################################################################
###################################################################################################
# imports
###################################################################################################


###################################################################################################
###################################################################################################
# Rewards - has the reward functions
###################################################################################################

def stochastic_reward(dat):
    pass
    # given dat (dict) with BF/residual/likelihood for a lightcurve, calculate the reward:
    # R = L_k - max(L_j) (where L_k is the kilonova model likelihood, L_j is the greatest L of 
    # a model that is not the kilonova model)
